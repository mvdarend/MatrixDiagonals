@page "/"
Create a new grid, enter grid size:
<input type="text" value="@gridSize" @oninput="createGridButton">
&nbsp;
or, create a grid with sample data from the given assignment <button @onclick="CreateSampleData_One">Sample input 1</button>
<button @onclick="CreateSampleData_Two">Sample input 2</button>
<hr />
@foreach (int matrixField in Enumerable.Range(0, gridSize * gridSize))
{
    int x = matrixField;
    <input type="number" min="-100" max="100" value="@matrixValueList[x]" @oninput="(e) => onChange(x, e)">
    if ((x + 1) % gridSize == 0)
    {
        <br>
    }
}
<hr />
<b>Answer:</b> @answer
<hr />

@code
{
    private int gridSize = 0, answer = 0;
    private List<int> matrixValueList = new List<int>();

    private void createGridButton(ChangeEventArgs e)
    {
        if (Int32.TryParse(e.Value.ToString(), out int givenValue))
        {
            createGrid(givenValue, new List<int>());
        }
    }

    private void onChange(int i, ChangeEventArgs e)
    {
        if (Int32.TryParse(e.Value.ToString(), out int givenValue))
        {
            matrixValueList[i] = givenValue;
            answer = Matrix.Bll.Calculations.CalculateMatrix(matrixValueList);
        }
    }

    private void CreateSampleData_One()
    {
        gridSize = 3;
        List<int> gridData = new List<int>() { 1, 2, 3, 4, 5, 6, 9, 8, 9 };
        createGrid(gridSize, gridData);
    }

    private void CreateSampleData_Two()
    {
        gridSize = 3;
        List<int> gridData = new List<int>() { 11, 2, 4, 4, 5, 6, 10, 8, -12 };
        createGrid(gridSize, gridData);
    }

    private void createGrid(int gridsize, List<int> gridData)
    {
        gridSize = gridsize;
        matrixValueList.Clear();
        if (gridData.Count == 0)
        {
            matrixValueList.AddRange(Enumerable.Range(0, gridSize * gridSize).Select(_ => 0));
        }
        else
        {
            matrixValueList = gridData;
        }

        answer = Matrix.Bll.Calculations.CalculateMatrix(matrixValueList);
        StateHasChanged();

    }

}
